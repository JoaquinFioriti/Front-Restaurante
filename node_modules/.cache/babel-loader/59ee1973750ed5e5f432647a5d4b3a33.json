{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jfioriti\\\\Desktop\\\\Projects\\\\entrega\\\\front\\\\src\\\\components\\\\todoNuevo\\\\IngredientesDisplay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { RecetaService } from \"../../services/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction IngredientesDisplay(_ref) {\n  _s();\n\n  let {\n    ingredienteId\n  } = _ref;\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [itemSelectedId, setItemSelectedId] = useState(-1);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const service = new RecetaService();\n        const response = await service.getSubItemFromSelectedItem(ingredienteId);\n        console.log(response.data);\n        setItems(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [ingredienteId]);\n  let fields = [];\n\n  try {\n    fields = Object.keys(items[0]).filter(field => field !== \"id\");\n  } catch (error) {\n    console.log(error);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-block px-2 w-1/4   hover:scale-105 duration-150 content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `rounded-full text-center max-w-full flex-wrap items-center bg-amber-200\n               ${itemSelectedId === index && \"bg-amber-600\"} `,\n        children: fields.map((field, subIndex) => {\n          const fieldName = field.charAt(0).toUpperCase() + field.slice(1);\n\n          if (Array.isArray(item[field])) {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" max-w-full w-1/2 inset-1/2 rounded-xl  m-auto text-white font-semibold cursor-pointer bg-amber-500 hover:bg-amber-600 active:bg-amber-600 focus:outline-none focus:ring focus:ring-amber-600\" // onClick={(e) => showSubItems(e, item.id, index)}\n              ,\n              children: `Ver ${fieldName}`\n            }, subIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this);\n          } else return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full text-center\",\n            children: `${fieldName}: ${item[field]}`\n          }, subIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_s(IngredientesDisplay, \"AKAd7d0Wt9XAuMUhT94gMRCKiyI=\");\n\n_c = IngredientesDisplay;\nexport default IngredientesDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientesDisplay\");","map":{"version":3,"names":["React","useEffect","useState","RecetaService","IngredientesDisplay","ingredienteId","items","setItems","loading","setLoading","itemSelectedId","setItemSelectedId","fetchData","service","response","getSubItemFromSelectedItem","console","log","data","error","fields","Object","keys","filter","field","map","item","index","subIndex","fieldName","charAt","toUpperCase","slice","Array","isArray"],"sources":["C:/Users/jfioriti/Desktop/Projects/entrega/front/src/components/todoNuevo/IngredientesDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { RecetaService } from \"../../services/services\";\r\n\r\nfunction IngredientesDisplay({ ingredienteId }) {\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [itemSelectedId, setItemSelectedId] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const service = new RecetaService();\r\n        const response = await service.getSubItemFromSelectedItem(\r\n          ingredienteId\r\n        );\r\n        console.log(response.data);\r\n        setItems(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [ingredienteId]);\r\n\r\n  let fields = [];\r\n  try {\r\n    fields = Object.keys(items[0]).filter((field) => field !== \"id\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading &&\r\n        items.map((item, index) => (\r\n          <div\r\n            key={index}\r\n            className=\"inline-block px-2 w-1/4   hover:scale-105 duration-150 content-center\"\r\n          >\r\n            <div\r\n              className={`rounded-full text-center max-w-full flex-wrap items-center bg-amber-200\r\n               ${itemSelectedId === index && \"bg-amber-600\"} `}\r\n            >\r\n              {fields.map((field, subIndex) => {\r\n                const fieldName =\r\n                  field.charAt(0).toUpperCase() + field.slice(1);\r\n\r\n                if (Array.isArray(item[field])) {\r\n                  return (\r\n                    <button\r\n                      key={subIndex}\r\n                      className=\" max-w-full w-1/2 inset-1/2 rounded-xl  m-auto text-white font-semibold cursor-pointer bg-amber-500 hover:bg-amber-600 active:bg-amber-600 focus:outline-none focus:ring focus:ring-amber-600\"\r\n                      // onClick={(e) => showSubItems(e, item.id, index)}\r\n                    >\r\n                      {`Ver ${fieldName}`}\r\n                    </button>\r\n                  );\r\n                } else\r\n                  return (\r\n                    <div key={subIndex} className=\"w-full text-center\">\r\n                      {`${fieldName}: ${item[field]}`}\r\n                    </div>\r\n                  );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IngredientesDisplay;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,yBAA9B;;;;AAEA,SAASC,mBAAT,OAAgD;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAC9C,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,CAAC,CAAF,CAApD;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,YAAY;MAC5BH,UAAU,CAAC,IAAD,CAAV;;MACA,IAAI;QACF,MAAMI,OAAO,GAAG,IAAIV,aAAJ,EAAhB;QACA,MAAMW,QAAQ,GAAG,MAAMD,OAAO,CAACE,0BAAR,CACrBV,aADqB,CAAvB;QAGAW,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;QACAX,QAAQ,CAACO,QAAQ,CAACI,IAAV,CAAR;MACD,CAPD,CAOE,OAAOC,KAAP,EAAc;QACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MACD;;MACDV,UAAU,CAAC,KAAD,CAAV;IACD,CAbD;;IAcAG,SAAS;EACV,CAhBQ,EAgBN,CAACP,aAAD,CAhBM,CAAT;EAkBA,IAAIe,MAAM,GAAG,EAAb;;EACA,IAAI;IACFA,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYhB,KAAK,CAAC,CAAD,CAAjB,EAAsBiB,MAAtB,CAA8BC,KAAD,IAAWA,KAAK,KAAK,IAAlD,CAAT;EACD,CAFD,CAEE,OAAOL,KAAP,EAAc;IACdH,OAAO,CAACC,GAAR,CAAYE,KAAZ;EACD;;EAED,oBACE;IAAA,UACG,CAACX,OAAD,IACCF,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR;MAEE,SAAS,EAAC,uEAFZ;MAAA,uBAIE;QACE,SAAS,EAAG;AAC1B,iBAAiBjB,cAAc,KAAKiB,KAAnB,IAA4B,cAAe,GAFhD;QAAA,UAIGP,MAAM,CAACK,GAAP,CAAW,CAACD,KAAD,EAAQI,QAAR,KAAqB;UAC/B,MAAMC,SAAS,GACbL,KAAK,CAACM,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCP,KAAK,CAACQ,KAAN,CAAY,CAAZ,CADlC;;UAGA,IAAIC,KAAK,CAACC,OAAN,CAAcR,IAAI,CAACF,KAAD,CAAlB,CAAJ,EAAgC;YAC9B,oBACE;cAEE,SAAS,EAAC,+LAFZ,CAGE;cAHF;cAAA,UAKI,OAAMK,SAAU;YALpB,GACOD,QADP;cAAA;cAAA;cAAA;YAAA,QADF;UASD,CAVD,MAWE,oBACE;YAAoB,SAAS,EAAC,oBAA9B;YAAA,UACI,GAAEC,SAAU,KAAIH,IAAI,CAACF,KAAD,CAAQ;UADhC,GAAUI,QAAV;YAAA;YAAA;YAAA;UAAA,QADF;QAKH,CApBA;MAJH;QAAA;QAAA;QAAA;MAAA;IAJF,GACOD,KADP;MAAA;MAAA;MAAA;IAAA,QADF;EAFJ,iBADF;AAsCD;;GApEQvB,mB;;KAAAA,mB;AAsET,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}